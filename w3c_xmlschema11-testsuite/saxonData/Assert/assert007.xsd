<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified"
  targetNamespace="http://chess/ns/" xmlns:chess="http://chess/ns/">

  <xs:complexType name="t1">
      <xs:sequence maxOccurs="unbounded">
        <xs:element name="white" type="xs:string"/>
        <xs:element name="black" type="xs:string" minOccurs="0"/>
      </xs:sequence>
      <xs:assert test="(every $w in chess:white satisfies not($w/following-sibling::*[1][self::chess:white])) and
                       (every $b in chess:black satisfies not($b/following-sibling::*[1][self::chess:black]))"/>  
  </xs:complexType>
  
  <xs:complexType name="t2">
    <xs:complexContent>
      <xs:restriction base="chess:t1">
        <xs:sequence maxOccurs="unbounded">
          <xs:element name="white" type="xs:string"/>
          <xs:element name="black" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:assert test="count(chess:white[. = 'oo']) lt 2"/>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>    
  
  <xs:complexType name="t3">
    <xs:complexContent>
      <xs:extension base="chess:t2">
        <xs:sequence>
          <xs:element name="result" type="xs:string"/>
        </xs:sequence>  
        <xs:assert test="chess:result = ('black wins', 'white wins', 'draw')"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>      

  <xs:element name="game" type="chess:t3"/>

</xs:schema>
