<?xml version="1.0" encoding="UTF-8"?>
<!-- $Date: 2001-06-01 16:45:37 +0530 (Fri, 01 Jun 2001) $ $Revision: 225913 $ -->
<!--[ Exceptions description ]-->
<exception name="DOMException"  id="ID-17189187">
  <descr>
    <p>DOM operations only raise exceptions in &quot;exceptional&quot;
      circumstances, i.e., when an operation is impossible
      to perform (either for logical reasons, because data is lost, or 
      because the implementation has become unstable). In general, DOM methods
      return specific error values in ordinary
      processing situations, such as out-of-bound errors when using
      <code>NodeList</code>. 
    </p>
    <p>Implementations should raise other exceptions under other circumstances.
    For example, implementations should raise an implementation-dependent 
    exception if a <code>null</code> argument is passed. </p>
    <p>Some languages and object systems do not support the concept of
    exceptions. For such systems, error conditions may be indicated using
    native error reporting mechanisms. For some bindings, for example, methods
    may return error codes similar to those listed in the corresponding method
    descriptions.</p>
  </descr>
  <component id="ID-146F692A" name="code">
    <typename>unsigned short</typename>
  </component>
</exception>
<group id="ID-258A00AF" name="ExceptionCode">
  <descr><p>An integer indicating the type of error generated.</p>
    <note><p>Other numeric codes are reserved for W3C for possible future
	use.</p></note>
  </descr>
  <constant name="INDEX_SIZE_ERR" type="unsigned short" value="1">
    <descr><p>If index or size is negative, or greater than the 
        allowed value</p></descr>
  </constant>
  <constant name="DOMSTRING_SIZE_ERR" type="unsigned short" value="2">
    <descr><p>If the specified range of text does not fit into a
	DOMString</p></descr>
  </constant>
  <constant name="HIERARCHY_REQUEST_ERR" type="unsigned short" value="3">
    <descr><p>If any node is inserted somewhere it doesn't belong</p></descr>
  </constant>
  <constant name="WRONG_DOCUMENT_ERR" type="unsigned short" value="4">
    <descr><p>If a node is used in a different document than the one that 
       created it (that doesn't support it)</p></descr>
  </constant>
  <constant name="INVALID_CHARACTER_ERR" type="unsigned short" value="5">
    <descr><p>If an invalid or illegal character is specified, such as in a
	name. See <xspecref href="&xml-spec;#NT-Char">production 2</xspecref>
        in the XML specification for the definition of a legal character, and 
        <xspecref href="&xml-spec;#NT-Name">production 5</xspecref>
        for the definition of a legal name character.</p></descr></constant>
  <constant name="NO_DATA_ALLOWED_ERR" type="unsigned short" value="6">
    <descr><p>If data is specified for a node which does not support
	data</p></descr></constant>
  <constant name="NO_MODIFICATION_ALLOWED_ERR" type="unsigned short" value="7">
    <descr><p>If an attempt is made to modify an object where modifications are
	not allowed</p></descr></constant>
  <constant name="NOT_FOUND_ERR" type="unsigned short" value="8">
    <descr><p>If an attempt is made to reference a node in a context where it
	does not exist</p></descr></constant>
  <constant name="NOT_SUPPORTED_ERR" type="unsigned short" value="9">
    <descr><p>If the implementation does not support the requested
	type of object or operation.</p></descr></constant>
  <constant name="INUSE_ATTRIBUTE_ERR" type="unsigned short" value="10">
    <descr><p>If an attempt is made to add an attribute that is already in use
	elsewhere</p></descr></constant>
  <!-- ****** DOM Level 2 additions ****** -->
  <constant name="INVALID_STATE_ERR" type="unsigned short" value="11"
    since="DOM Level 2">
    <descr><p>If an attempt is made to use an object that is not, or is no
	longer, usable.</p></descr></constant>
  <constant name="SYNTAX_ERR" type="unsigned short" value="12"
    since="DOM Level 2">
    <descr><p>If an invalid or illegal string is specified.</p></descr></constant>
  <constant name="INVALID_MODIFICATION_ERR" type="unsigned short" value="13"
    since="DOM Level 2">
    <descr><p>If an attempt is made to modify the type of the underlying
	object.</p></descr></constant>
  <constant name="NAMESPACE_ERR" type="unsigned short" value="14"
    since="DOM Level 2">
    <descr><p>If an attempt is made to create or change an object in a way
      which is incorrect with regard to namespaces.</p></descr>
  </constant>
  <constant name="INVALID_ACCESS_ERR" type="unsigned short" value="15"
    since="DOM Level 2">
    <descr><p>If a parameter or an operation is not supported by the
      underlying object.</p></descr>
  </constant>
</group>
